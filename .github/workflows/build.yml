name: Build APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
      # Use an older, stable NDK (r25b or r23c) if needed.
      ANDROID_NDK_HOME: /usr/local/lib/android/sdk/ndk/25b
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y \
              git zip unzip openjdk-17-jdk python3-pip python3-setuptools \
              build-essential autoconf automake libtool pkg-config libffi-dev libssl-dev

      - name: Install Buildozer and dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install buildozer cython virtualenv

      - name: Set up Android SDK & NDK
        run: |
          # Download Android SDK (if not already installed on the runner)
          wget https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip -O cmdline-tools.zip
          unzip cmdline-tools.zip -d $HOME/android-sdk
          mkdir -p $HOME/android-sdk/cmdline-tools/latest
          mv $HOME/android-sdk/cmdline-tools/* $HOME/android-sdk/cmdline-tools/latest/
          export ANDROID_SDK_ROOT=$HOME/android-sdk
          export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$PATH
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-31" "build-tools;31.0.0"
          # For NDK, you may choose a stable version (for example, r25b)
          sdkmanager "ndk;25.2.9519653"
          export ANDROID_NDK_HOME=$ANDROID_SDK_ROOT/ndk/25.2.9519653
          echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "ANDROID_NDK_HOME=$ANDROID_NDK_HOME" >> $GITHUB_ENV

      - name: Initialize Buildozer
        run: |
          # Create a buildozer.spec if it doesn't exist.
          if [ ! -f buildozer.spec ]; then
            buildozer init
          fi
          # Optionally, you can modify buildozer.spec here using sed if needed.
          # For example, set the requirements, api levels, etc.
          sed -i 's/^requirements = .*/requirements = kivy,kivymd,kivy_garden.matplotlib,matplotlib,setuptools/' buildozer.spec
          sed -i 's/^android.api = .*/android.api = 31/' buildozer.spec
          sed -i 's/^android.minapi = .*/android.minapi = 21/' buildozer.spec
          sed -i 's/^# (str) Package name/package.name = mykivyapp\n# (str) Package name/' buildozer.spec

      - name: Clean previous builds
        run: buildozer android clean

      - name: Build Debug APK
        run: buildozer -v android debug

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: mykivyapp-apk
          path: bin/*.apk
